{"ast":null,"code":"var _jsxFileName = \"D:\\\\VsCode\\\\react-learn\\\\react-food-order\\\\src\\\\components\\\\Food\\\\FoodItem\\\\FoodForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport style from \"./FoodForm.module.css\";\nimport InputFood from \"../../UI/InputFood\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FoodForm = _ref => {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  const inputRef = useRef(); // error checking state\n\n  const [isAmountValid, setIsAmountValid] = useState(true);\n\n  const submitHanlder = e => {\n    e.preventDefault();\n    const enteredAmount = inputRef.current.value;\n    const enteredAmountNum = +enteredAmount; // convert from string to number\n    // error checking\n\n    if (enteredAmountNum < 1 || enteredAmountNum > 5) {\n      setIsAmountValid(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: style.form,\n    onSubmit: submitHanlder,\n    children: [/*#__PURE__*/_jsxDEV(InputFood, {\n      ref: inputRef,\n      label: \"Amount\",\n      input: {\n        id: \"amount_\" + id,\n        type: \"number\",\n        min: 1,\n        max: 10,\n        defaultValue: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), !isAmountValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please input correct value (1-5)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FoodForm, \"NDX6v4LgS8tSoM9G0Xg7aK4h0Fs=\");\n\n_c = FoodForm;\nexport default FoodForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodForm\");","map":{"version":3,"sources":["D:/VsCode/react-learn/react-food-order/src/components/Food/FoodItem/FoodForm.jsx"],"names":["React","useRef","useState","style","InputFood","FoodForm","id","inputRef","isAmountValid","setIsAmountValid","submitHanlder","e","preventDefault","enteredAmount","current","value","enteredAmountNum","form","type","min","max","defaultValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;;AAEA,MAAMC,QAAQ,GAAG,QAAY;AAAA;;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AAC3B,QAAMC,QAAQ,GAAGN,MAAM,EAAvB,CAD2B,CAG3B;;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMQ,aAAa,GAAGC,CAAC,IAAI;AACzBA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,aAAa,GAAGN,QAAQ,CAACO,OAAT,CAAiBC,KAAvC;AACA,UAAMC,gBAAgB,GAAG,CAACH,aAA1B,CAJyB,CAIgB;AAEzC;;AACA,QAAIG,gBAAgB,GAAG,CAAnB,IAAwBA,gBAAgB,GAAG,CAA/C,EAAkD;AAChDP,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAVD;;AAYA,sBACE;AAAM,IAAA,SAAS,EAAEN,KAAK,CAACc,IAAvB;AAA6B,IAAA,QAAQ,EAAEP,aAAvC;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,GAAG,EAAEH,QADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,KAAK,EAAE;AACLD,QAAAA,EAAE,EAAE,YAAYA,EADX;AAELY,QAAAA,IAAI,EAAE,QAFD;AAGLC,QAAAA,GAAG,EAAE,CAHA;AAILC,QAAAA,GAAG,EAAE,EAJA;AAKLC,QAAAA,YAAY,EAAE;AALT;AAHT;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,EAaG,CAACb,aAAD,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAnCD;;GAAMH,Q;;KAAAA,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport style from \"./FoodForm.module.css\";\r\nimport InputFood from \"../../UI/InputFood\";\r\n\r\nconst FoodForm = ({ id }) => {\r\n  const inputRef = useRef();\r\n\r\n  // error checking state\r\n  const [isAmountValid, setIsAmountValid] = useState(true);\r\n\r\n  const submitHanlder = e => {\r\n    e.preventDefault();\r\n\r\n    const enteredAmount = inputRef.current.value;\r\n    const enteredAmountNum = +enteredAmount; // convert from string to number\r\n\r\n    // error checking\r\n    if (enteredAmountNum < 1 || enteredAmountNum > 5) {\r\n      setIsAmountValid(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={style.form} onSubmit={submitHanlder}>\r\n      <InputFood\r\n        ref={inputRef}\r\n        label=\"Amount\"\r\n        input={{\r\n          id: \"amount_\" + id,\r\n          type: \"number\",\r\n          min: 1,\r\n          max: 10,\r\n          defaultValue: 1,\r\n        }}\r\n      />\r\n      <button>Add</button>\r\n      {!isAmountValid && <p>Please input correct value (1-5)</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FoodForm;\r\n"]},"metadata":{},"sourceType":"module"}