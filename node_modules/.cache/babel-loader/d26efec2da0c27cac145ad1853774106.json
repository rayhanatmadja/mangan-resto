{"ast":null,"code":"var _jsxFileName = \"D:\\\\VsCode\\\\react-learn\\\\react-food-order\\\\src\\\\context\\\\cart-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/React.createContext({\n  foods: [],\n  totalAmount: 0,\n  addFood: item => {},\n  removeFood: id => {}\n});\nconst defaultCartValue = {\n  foods: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const newFoodsVal = state.foods.concat(action.item);\n    const newTotalAmountVal = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      foods: newFoodsVal,\n      totalAmount: newTotalAmountVal\n    };\n  }\n\n  return defaultCartValue;\n};\n\nconst CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [cartState, dispatchCartState] = useReducer(cartReducer, defaultCartValue);\n\n  const addToFoodFormHandler = item => {\n    dispatchCartState({\n      type: \"ADD_ITEM\",\n      item: item\n    });\n  };\n\n  const removeFromFoodFormHandler = id => {\n    dispatchCartState({\n      type: \"REMOVE_ITEM\",\n      id: id\n    });\n  };\n\n  const cartValue = {\n    foods: cartState.foods,\n    totalAmount: cartState.totalAmount,\n    addFood: addToFoodFormHandler,\n    removeFood: removeFromFoodFormHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"N2qZlLDgf+vmdS4dHl2P0DvjhO0=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["D:/VsCode/react-learn/react-food-order/src/context/cart-context.js"],"names":["React","useReducer","CartContext","createContext","foods","totalAmount","addFood","item","removeFood","id","defaultCartValue","cartReducer","state","action","type","newFoodsVal","concat","newTotalAmountVal","price","amount","CartProvider","children","cartState","dispatchCartState","addToFoodFormHandler","removeFromFoodFormHandler","cartValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AAC7CC,EAAAA,KAAK,EAAE,EADsC;AAE7CC,EAAAA,WAAW,EAAE,CAFgC;AAG7CC,EAAAA,OAAO,EAAEC,IAAI,IAAI,CAAE,CAH0B;AAI7CC,EAAAA,UAAU,EAAEC,EAAE,IAAI,CAAE;AAJyB,CAApB,CAApB;AAOP,MAAMC,gBAAgB,GAAG;AACvBN,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMM,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,UAAMC,WAAW,GAAGH,KAAK,CAACR,KAAN,CAAYY,MAAZ,CAAmBH,MAAM,CAACN,IAA1B,CAApB;AACA,UAAMU,iBAAiB,GACrBL,KAAK,CAACP,WAAN,GAAoBQ,MAAM,CAACN,IAAP,CAAYW,KAAZ,GAAoBL,MAAM,CAACN,IAAP,CAAYY,MADtD;AAEA,WAAO;AACLf,MAAAA,KAAK,EAAEW,WADF;AAELV,MAAAA,WAAW,EAAEY;AAFR,KAAP;AAID;;AACD,SAAOP,gBAAP;AACD,CAXD;;AAaA,MAAMU,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACrC,QAAM,CAACC,SAAD,EAAYC,iBAAZ,IAAiCtB,UAAU,CAC/CU,WAD+C,EAE/CD,gBAF+C,CAAjD;;AAKA,QAAMc,oBAAoB,GAAGjB,IAAI,IAAI;AACnCgB,IAAAA,iBAAiB,CAAC;AAAET,MAAAA,IAAI,EAAE,UAAR;AAAoBP,MAAAA,IAAI,EAAEA;AAA1B,KAAD,CAAjB;AACD,GAFD;;AAIA,QAAMkB,yBAAyB,GAAGhB,EAAE,IAAI;AACtCc,IAAAA,iBAAiB,CAAC;AAAET,MAAAA,IAAI,EAAE,aAAR;AAAuBL,MAAAA,EAAE,EAAEA;AAA3B,KAAD,CAAjB;AACD,GAFD;;AAIA,QAAMiB,SAAS,GAAG;AAChBtB,IAAAA,KAAK,EAAEkB,SAAS,CAAClB,KADD;AAEhBC,IAAAA,WAAW,EAAEiB,SAAS,CAACjB,WAFP;AAGhBC,IAAAA,OAAO,EAAEkB,oBAHO;AAIhBhB,IAAAA,UAAU,EAAEiB;AAJI,GAAlB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,SAA7B;AAAA,cAAyCL;AAAzC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAxBD;;GAAMD,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\nexport const CartContext = React.createContext({\r\n  foods: [],\r\n  totalAmount: 0,\r\n  addFood: item => {},\r\n  removeFood: id => {},\r\n});\r\n\r\nconst defaultCartValue = {\r\n  foods: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD_ITEM\") {\r\n    const newFoodsVal = state.foods.concat(action.item);\r\n    const newTotalAmountVal =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n    return {\r\n      foods: newFoodsVal,\r\n      totalAmount: newTotalAmountVal,\r\n    };\r\n  }\r\n  return defaultCartValue;\r\n};\r\n\r\nconst CartProvider = ({ children }) => {\r\n  const [cartState, dispatchCartState] = useReducer(\r\n    cartReducer,\r\n    defaultCartValue\r\n  );\r\n\r\n  const addToFoodFormHandler = item => {\r\n    dispatchCartState({ type: \"ADD_ITEM\", item: item });\r\n  };\r\n\r\n  const removeFromFoodFormHandler = id => {\r\n    dispatchCartState({ type: \"REMOVE_ITEM\", id: id });\r\n  };\r\n\r\n  const cartValue = {\r\n    foods: cartState.foods,\r\n    totalAmount: cartState.totalAmount,\r\n    addFood: addToFoodFormHandler,\r\n    removeFood: removeFromFoodFormHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartValue}>{children}</CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}